service: "historical-reports-s3"

provider:
  name: aws
  runtime: python3.6
  memorySize: 512
  timeout: 300
  deploymentBucket:
    name: YOUR-DEPLOYMENT-BUCKET-HERE

custom: ${file(serverless_configs/${opt:stage}.yml)}

functions:
  FullReport:
    handler: s3.generate.handler
    description: Scheduled event that generates the full historical s3 report.
    tags:
      owner: YOUREMAILHERE@YOURCOMPANYHERE.COM
    role: arn:aws:iam::${self:custom.accountId}:role/<IAM-ROLE-TO-RUN-THE-HISTORICAL-S3-LAMBDA-REPORT>
    events:
      - stream:
          type: dynamodb
          arn:
            Fn::ImportValue: HistoricalS3DurableTableStreamArn
          startingPosition: LATEST
    environment:
      SENTRY_DSN: <SENTRY-DSN HERE IF YOU WANT TO USE IT>
      DUMP_TO_BUCKETS: ${self:custom.dumpBuckets}
      IMPORT_BUCKET: ${self:custom.importBucket}
      EXCLUDE_FIELDS: ${self:custom.excludeFields}

resources:
  Resources:
    FullReportScheduledRule:
      Type: AWS::Events::Rule
      Properties:
        Description: ScheduledRule for the full report (sans Policy)
        ScheduleExpression: rate(3 hours)
        State: ENABLED
        Targets:
          -
            Arn:
              Fn::GetAtt:
                - FullReportLambdaFunction
                - Arn
            Id: TargetFunctionV1

    PermissionForFullReportEventsToInvokeLambda:
      Type: AWS::Lambda::Permission
      Properties:
        FunctionName:
          Ref: FullReportLambdaFunction
        Action: lambda:InvokeFunction
        Principal: events.amazonaws.com
        SourceArn:
          Fn::GetAtt:
            - FullReportScheduledRule
            - Arn

    FullReportLogGroup:
      Properties:
        RetentionInDays: "3"


plugins:
  - serverless-python-requirements
  - serverless-prune-plugin
